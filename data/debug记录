
########################################################################################################################
# 主循环程序流程
#======= _$$m = 42 的流程：=======================================
# 从 _$hH 的字符串数组中取指定下标饿对象，并覆盖写入终数组中字符串数组的位置

# _$kC 初始值 == 3
_$cY = _$hH[--_$kC],    
# _$cY  == 87
_$hz = _$hH[--_$kC],    
# _$hz = Array 数组
# 此时 _$kC == 1
_$hH[_$kC++] = _$hz[_$cY]   # 取 _$hz 的 87 号位置的值赋值给 _$hH 的 1
# 此时 _$kC == 2

#=======  _$$m = 45 的流程：=======================================
# 从 _$iE 中获取字符串数组放入到 终数组 中
_$hH[_$kC++] = _$iE[_$hT[++_$kk]] 

#=======  _$$m = 26 的流程：=======================================
# 从下标数组 _$hT 获取下一个元素的下标，写入 _$hH 的最后一个有效元素之后
_$hH[_$kC++] = _$hT[++_$kk]

#=======  _$$m = 17 的流程：=======================================
# 主要目的：执行数组中的对象的方法得到值再放入数组

# 定位到 _$hH 最后一个元素的下标，将下标值赋值给 _$cY
# 执行 _$bx 方法
# 将终数组最后一个元素作为入参，传给从 _$bx 取出的对象的方法中
# 执行函数赋值给终数组一开始存放对象的位置
_$kC--,
_$cY = _$kC,
_$bx(),
_$hH[_$kC++] = _$hz[_$kA](_$hH[_$cY])


#=======  _$$m = 25 的流程：=======================================
# 主要目的：将终数组中有效的值放入到 _$hz 中
# 获取终数组最后一个值的下标
# 执行 _$bx 方法
# 将 下标写入 _$hz（总下标数组）
_$cY = _$hH[--_$kC],
_$bx(),
_$hz[_$kA] = _$cY


#=======  _$$m = 6 的流程：=======================================
# 目的：从 _$hd 中获取对象放入终数组
_$hH[_$kC++] = _$hd[_$hT[++_$kk]]


#=======  _$$m = 57 的流程：=======================================
# 将两个元素进行相减赋值给终数组
_$cY = _$hH[--_$kC],
_$cY = _$hH[--_$kC] - _$cY,
_$hH[_$kC++] = _$cY

#=======  _$$m = 38 的流程：=======================================
# 修改  _$kk 值，游标修改
_$cY = _$hH[--_$kC],
_$hY = _$hT[++_$kk],
_$cY ? 0 : _$kk += _$hY



#=======  _$$m = 16 的流程：=======================================
# 执行终数组中的对象和函数
_$kC--,
_$cY = _$kC,
_$bx(),
_$cY = _$hz[_$kA](_$hH[_$cY])

#=======  _$$m = 63 的流程：=======================================

# 更新 _$kA 和 _$hz
_$kA = _$hT[++_$kk],    # 3
_$hz = _$hd


#=======  _$$m = 77 的流程：=======================================
# 修改 _$cY 的值
_$cY = _$hz[_$kA]--

#=======  _$$m = 14 的流程：=======================================
# 更新 _$kk 的值
_$hY = _$hT[++_$kk],
_$kk -= _$hY

#=======  _$$m = 75 的流程：=======================================
# 比较终数组的值并更新
# _$kC == 2
_$cY = _$hH[--_$kC],    # _$hH[1]
_$cY = _$hH[--_$kC] >= _$cY,    # _$hH[0]
_$hH[_$kC++] = _$cY

#=======  _$$m = 44 的流程：=======================================
# 比较终数组的值是否相等并保存对比结果到数组中
# _$kC == 2
_$cY = _$hH[--_$kC],
_$cY = _$hH[--_$kC] === _$cY,
_$hH[_$kC++] = _$cY


#=======  _$$m = 29 的流程：=======================================
# 传入两个参数执行

#=======  _$$m = 25 的流程：=======================================
# 跟新临时变量 _$ca

#=======  _$$m = 21 的流程：=======================================
# 跟新下标数组中的值；更新中数组中的值


#=======  _$$m = 4 的流程：=======================================
# 根据终数组的值是否存在决定是否更新 下标 和 循环游标


#=======  _$$m = 7 的流程：=======================================
# 比较终数组的值是否相等，保存比对结果


#=======  _$ay == 39 =======================================
# 根据终数组的值是否存在决定是否更新 下标 和 循环游标







########################################################################################################################
########################################################################################################################
# _$bx 方法内部流程

#=======  _$ay == 24 =======================================
# 将终数组的倒数第二位和倒数第三位取出赋值给临时变量

# 取终数组_$hH的倒数第 3 位
_$kA = _$hH[--_$kC], # "getElementsByTagName"
# 取终数组_$hH的倒数第 4 位
_$hz = _$hH[--_$kC] # "document"

#=======  _$ay == 63 =======================================
# 跟新 _$kA 和 _$hz 的值
_$kA = _$hT[++_$kk],    # 3
_$hz = _$hd

#=======  _$ay == 24 =======================================


########################################################################################################################

_$kC 当前数组下一个下标位置
_$hH 最终数组
    格式： [对象, 字符串数组（对象名称，属性名称，方法名称……）,下标]
_$kk 循环的游标
_$hT 存储下标的数组
_$iE 存储方法名称，字符串数组，下标
_$hd 最终得到的有效数组



调试值：
$$m:  63 _$hH:  (4) [Proxy, 'removeChild', HTMLScriptElement, 1]
_$hd：
(4) [Window, Arguments(0), Proxy, 1]
Proxy 是一个[script, script]数组

chrome值：
_$$m:  63 _$hH:  (4) [head, 'removeChild', script, 1]
_$hd：
(4) [Window, Arguments(0), HTMLCollection(1), 1]
此时 _$hd[2] 的值不一样，原因是vscode程序中未真正实现removeChild方法

# 保持一致的地方
第6次大循环
_$$m:  47 _$hH:  (2) [ƒ, 0]
_$kk == 13

# 打印当前判断值，索引取值下标，目标数组元素
'当前判断 _$aR: ', _$aR, '当前游标 _$f6：', _$f6, '当前 _$jJ: ',_$jJ

# 调试报错断点位置
_$aR === 6 && JSON.stringify(_$jJ) === JSON.stringify([false, 8, 52])

# 调试报错位置：
VM510:4 当前判断 _$_L:  9 当前游标 _$iq： 18 当前 _$aV:  (3) [Array(8), 7, 4]
_$$p 的值不一样

_$gi.some(element => {
    return element.message.includes('Error at');
})
array.some(element => {
  if (typeof element === 'string') {
    return element.includes(searchString);
  } else if (element instanceof Error) {
    return element.message.includes(searchString);
  }
})