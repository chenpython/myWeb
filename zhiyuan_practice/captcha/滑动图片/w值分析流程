1、 w 调试值
"https://api.geetest.com/ajax.php?gt=019924a82c70bb123aae90d483087f94&challenge=034107e49de5c02d8d839d5a244a53379y&lang=zh-cn&%24_BCe=0&client_type=web
&w=2Lo()OORYp5CpExu6lHrNZlyQIEKm29gBhT00)QaH45cGQ)HOsHwja31yrj64Z)zmhP7aQ(chN1L6Tz90VYRyvuwWafsleI)FR2BBuGlfz5bgfDTmFjEBz03wfJBjruSwxlnwks8fEMblltVIjYwldkyLnQuS9kyuD3Y6m8bb(SpX))BwUzVvpkYwHHSgy0SaDR7NK1tAC5hQKzXc(SVck)ruAtjt8LaIlOV0xSvg63TfmuiSinzgBC6zX1gxnyS(fuTZOPjLprPaw8aWg9xe2)XpULM4njXEtw0hhHpmvdnIs44wwsEalrxqgPFKh5guyMEouR7qlhSf1niHMp0FE2QSEZ)ru1ex6DDGrlEjj4Zm((sYVYtRle2nHPxU4QTFSrn4hlBBKQ)IiZCQBRtyrXGg3FHrBCqkvmrnRqkF71ELSpqwt19QpRdKhYatbNDC5NgQnCukvJrr0j85Yk5WQNbuA(9o3dcA0m2NP(fq6JIHF5blyK6eDVgOebvU2uQ)xuayHbHuMYPS8BW3sTlbg3B9KwugSPMyeBAIYrRV)y7BJZP0hlTV7)UieBIPqYD0NaejVPn7wuN3wqXTS8R68oar3NtAmuDBzeoCa(WiYQKTDf8P3ylKn69WVOE5Fck4nWpN(l5Ud6IHCjuVw2QQp50as3G38nBsXCGAXNA2OJXTICxMKnzTmeGZ)wBH4K507PtEk1kAhm0i44da1)R3pg4LLqQ49jj7RgGPZtdUDDL6YlvNUJJuRxf1rFC)MuJOUbAYL)7YY7VKBjYFsDIC(TMWjE4my(T0j7V86YRA6U.36eecb12ace682338dabec69688c0fb80218cded53205f70296073741398e8805a4b3a12ed7889bd62af1e4d40e380d3beabb10bf4fd5ee02d3e079fe5fa96a30356bd69be8a46525094635d6a87499558151fe1415a485f1949ca6e5b4335cc07be4aa7d148d770c54388dc718e2e2cb299be4fd9959e200f4721a9e84198b3&callback=geetest_1695698474648"

2、生成w的地方
"\u0077": h + u
        ---> "\u0077" 是特征码

3、生成h的地方
l = V[$_CAEEx(363)](gt[$_CAEFd(178)](o), r[$_CAEEx(706)]())
h = m[$_CAEFd(747)](l)

    代码替换：
        l = V['encrypt'](gt['stringify'](o), r[$_CAEEx(706)]())
            stringify 方法：将变量转为json字符串

            1）gt['stringify'](o) ：返回一段加密内容
                o对象主要数据来源于 https://api.geetest.com/get.php 请求的返回值
                    o['aa'] 为轨迹数据，生成代码如下：
                        l = n[$_CJHEU(917)][$_CJHEU(900)](n[$_CJHF_(917)][$_CJHF_(1038)](), n[$_CJHEU(29)][$_CJHF_(1098)], n[$_CJHEU(29)][$_CJHF_(370)]);

                            1.1）n[$_CJHEU(29)][$_CJHF_(1098)] --> 接口返回的 c 参数
                            1.2）n[$_CJHEU(29)][$_CJHF_(370)] --> 接口返回的 s 参数
                            1.3）n[$_CJHF_(917)][$_CJHF_(1038)]() --> 轨迹数据

                                加密算法返回：
                                    r["jion"]("") + "!!" + i["jion"]("") + "!!" + o["jion"]("")
                                    
                                    r、i、o 生成：
                                        new ct(t)[$_BEFJw(36)](function(t) {
                                            var $_BEGJk = KqDXn.$_Cq
                                            , $_BEGIA = ['$_BEHCe'].concat($_BEGJk)
                                            , $_BEHAA = $_BEGIA[1];
                                            $_BEGIA.shift();
                                            var $_BEHBG = $_BEGIA[0];
                                            var e = function(t) {
                                                var $_BEHEB = KqDXn.$_Cq
                                                , $_BEHDq = ['$_BEHHM'].concat($_BEHEB)
                                                , $_BEHFG = $_BEHDq[1];
                                                $_BEHDq.shift();
                                                var $_BEHGi = $_BEHDq[0];
                                                for (var e = [[1, 0], [2, 0], [1, -1], [1, 1], [0, 1], [0, -1], [3, 0], [2, -1], [2, 1]], n = 0, r = e[$_BEHEB(127)]; n < r; n++)
                                                    if (t[0] == e[n][0] && t[1] == e[n][1])
                                                        return $_BEHFG(415)[n];
                                                return 0;
                                            }(t);
                                            e ? i[$_BEHAA(194)](e) : (r[$_BEHAA(194)](n(t[0])),
                                            i[$_BEGJk(194)](n(t[1]))),
                                            o[$_BEGJk(194)](n(t[2]));
                                        })
                                    ，
                                    生成轨迹的控制流：
                                        "\u0024\u005f\u0042\u004a\u004f": function(t) {
                                            var $_BFEJB = KqDXn.$_Cq
                                            , $_BFEIc = ['$_BFFCm'].concat($_BFEJB)
                                            , $_BFFAU = $_BFEIc[1];
                                            $_BFEIc.shift();
                                            var $_BFFBR = $_BFEIc[0];
                                            var e = this[$_BFFAU(489)];
                                            if (e[$_BFEJB(484)])
                                                return new ct(e[$_BFFAU(484)](t));
                                            for (var n = [], r = 0, i = e[$_BFEJB(127)]; r < i; r += 1)
                                                n[r] = t(e[r], r, this);
                                            return new ct(n);
                                        }

                                    ，

                                    加密坐标函数：
                                        function n(t) {
                                            var $_DBBEm = KqDXn.$_DI()[3][25];
                                            for (; $_DBBEm !== KqDXn.$_DI()[6][21]; ) {
                                                switch ($_DBBEm) {
                                                case KqDXn.$_DI()[9][25]:
                                                    var e = $_BEGAX(475)
                                                    , n = e[$_BEFJw(127)]
                                                    , r = $_BEGAX(37)
                                                    , i = Math[$_BEGAX(382)](t)
                                                    , o = parseInt(i / n);
                                                    $_DBBEm = KqDXn.$_DI()[0][24];
                                                    break;
                                                case KqDXn.$_DI()[15][24]:
                                                    n <= o && (o = n - 1),
                                                    o && (r = e[$_BEGAX(117)](o));
                                                    $_DBBEm = KqDXn.$_DI()[0][23];
                                                    break;
                                                case KqDXn.$_DI()[9][23]:
                                                    var s = $_BEFJw(37);
                                                    $_DBBEm = KqDXn.$_DI()[12][22];
                                                    break;
                                                case KqDXn.$_DI()[9][22]:
                                                    return t < 0 && (s += $_BEGAX(440)),
                                                    r && (s += $_BEFJw(429)),
                                                    s + r + e[$_BEGAX(117)](i %= n);
                                                    break;
                                                }
                                            }
                                        }
                                    
                                    ，
                                    对原始轨迹做处理：
                                        var t = function(t) {
                                            var $_BEGEE = KqDXn.$_Cq
                                            , $_BEGDK = ['$_BEGHr'].concat($_BEGEE)
                                            , $_BEGFB = $_BEGDK[1];
                                            $_BEGDK.shift();
                                            var $_BEGGX = $_BEGDK[0];
                                            for (var e, n, r, i = [], o = 0, s = 0, a = t[$_BEGEE(127)] - 1; s < a; s++)
                                                e = Math[$_BEGEE(162)](t[s + 1][0] - t[s][0]),
                                                n = Math[$_BEGEE(162)](t[s + 1][1] - t[s][1]),
                                                r = Math[$_BEGFB(162)](t[s + 1][2] - t[s][2]),
                                                0 == e && 0 == n && 0 == r || (0 == e && 0 == n ? o += r : (i[$_BEGFB(194)]([e, n, r + o]),
                                                o = 0));
                                            return 0 !== o && i[$_BEGFB(194)]([e, n, o]),
                                            i;
                                        }(this[$_BEFJw(358)])



                
            ，
                    
                    

            2）r[$_CAEEx(706)]：生成随机字符串getU方法




4、生成u的地方
var u = r[$_CAEEx(750)]()
    代码：
        "\u0024\u005f\u0043\u0041\u0049\u0075": function(t) {
            var $_CBCEa = KqDXn.$_Cq
            , $_CBCDA = ['$_CBCHp'].concat($_CBCEa)
            , $_CBCFZ = $_CBCDA[1];
            $_CBCDA.shift();
            var $_CBCGT = $_CBCDA[0];
            var e = new U()[$_CBCEa(363)](this[$_CBCFZ(706)](t));
            while (!e || 256 !== e[$_CBCFZ(127)])
                e = new U()[$_CBCEa(363)](this[$_CBCEa(706)](!0));
            return e;
        },

        this[$_CBCFZ(706)](t) 生成一串字符串：
            ---> 关键代码："\u0024\u005f\u0043\u0041\u004a\u0062": (Ot = rt(),……)
                ---> 关键代码 rt()：return t() + t() + t() + t();
                    ---> 关键代码：生成随机数
                        return (65536 * (1 + Math[$_BFAFA(27)]()) | 0)[$_BFAEN(212)](16)[$_BFAFA(428)](1);
                        等同于
                        return (65536 * (1 + Math['random']()) | 0)['toString'](16)['substring'](1);
                    ---> 关键代码替换为：
                        function random_str() {
                            var result = '';
                            for (var i = 0; i < 4; i++) {
                                result += (65536 * (1 + Math['random']()) | 0)['toString'](16)['substring'](1);
                            }
                            return result;
                        }
            ,

        new U()[$_CBCEa(363)]：调用encypt方法加密

            ---> 关键代码：
                function lt(t) {
                var $_BABJQ = KqDXn.$_Cq
                  , $_BABIx = ['$_BACCI'].concat($_BABJQ)
                  , $_BACAQ = $_BABIx[1];
                ……
                var r = n[$_BABJQ(212)](16);
                return 0 == (1 & r[$_BACAQ(127)]) ? r : $_BACAQ(42) + r;
            }
                ---> 生成 publicKey
                    function a(t, e) {
                        var $_BACEY = KqDXn.$_Cq
                            , $_BACDq = ['$_BACHV'].concat($_BACEY)
                            , $_BACFP = $_BACDq[1];
                        $_BACDq.shift();
                        var $_BACGw = $_BACDq[0];
                        if (e < t[$_BACEY(127)] + 11)
                            return console && console[$_BACEY(41)] && console[$_BACFP(41)]($_BACFP(338)),
                                null;
                        var n = []
                            , r = t[$_BACEY(127)] - 1;
                        while (0 <= r && 0 < e) {
                            var i = t[$_BACEY(176)](r--);
                            i < 128 ? n[--e] = i : 127 < i && i < 2048 ? (n[--e] = 63 & i | 128,
                                n[--e] = i >> 6 | 192) : (n[--e] = 63 & i | 128,
                                    n[--e] = i >> 6 & 63 | 128,
                                    n[--e] = i >> 12 | 224);
                        }
                        n[--e] = 0;
                        var o = new l()
                            , s = [];
                        while (2 < e) {
                            s[0] = 0;
                            while (0 == s[0])
                                o[$_BACFP(283)](s);
                            n[--e] = s[0];
                        }
                        return n[--e] = 2,
                            n[--e] = 0,
                            new y(n);
                    } (上步骤生成的随机值, 128);
                ,

                $_BABJQ(319) ---> doPublic 方法：
                    function ct(t) {
                        var $_BAAEj = KqDXn.$_Cq
                        , $_BAADB = ['$_BAAHP'].concat($_BAAEj)
                        , $_BAAFr = $_BAADB[1];
                        $_BAADB.shift();
                        var $_BAAGu = $_BAADB[0];
                        return t[$_BAAFr(388)](this[$_BAAFr(357)], this[$_BAAEj(302)]);
                    }
                ,
        ，


    ---> setPublic
        function ut(t, e) {
                var $_BAAJO = KqDXn.$_Cq
                  , $_BAAIA = ['$_BABCy'].concat($_BAAJO)
                  , $_BABAt = $_BAAIA[1];
                $_BAAIA.shift();
                var $_BABBL = $_BAAIA[0];
                null != t && null != e && 0 < t[$_BABAt(127)] && 0 < e[$_BABAt(127)] ? (this[$_BAAJO(302)] = function n(t, e) {
                    var $_BABEW = KqDXn.$_Cq
                      , $_BABDQ = ['$_BABHh'].concat($_BABEW)
                      , $_BABFI = $_BABDQ[1];
                    $_BABDQ.shift();
                    var $_BABGp = $_BABDQ[0];
                    return new y(t,e);
                }(t, 16),
                this[$_BABAt(357)] = parseInt(e, 16)) : console && console[$_BAAJO(41)] && console[$_BAAJO(41)]($_BAAJO(327));
            }
        ,
        '00C1E3934D1614465B33053E7F48EE4EC87B14B95EF88947713D25EECBFF7E74C7977D02DC1D9451F79DD5D1C10C29ACB6A9B4D6FB7D0A0279B6719E1772565F09AF627715919221AEF91899CAE08C0D686D748B20A3603BE2318CA6BC2B59706592A9219D0BF05C9F65023A21D2330807252AE0066D59CEEFA5F2748EA80BAB81'
        t 是key，e是模值，t和e是不会变的，可以校验扣取的代码执行是否正确
    ，

    










核心问题
一、加密函数在哪里？
二、加密函数使用了哪些值？


























